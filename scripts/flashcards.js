// Flashcard data
export const flashcards = [
    { term: "High-level Language", definition: "Easier-to-read languages closer to human language (e.g., Python, JavaScript) that require compilation/interpretation." },
    { term: "Low-level Language", definition: "Languages closer to machine code (e.g., assembly) that are harder for humans but more efficient for computers." },
    { term: "Procedural Programming", definition: "A paradigm where programs are divided into functions/routines (e.g., C, Pascal) using a top-down approach." },
    { term: "Object-Oriented Programming (OOP)", definition: "A paradigm based on objects containing data (attributes) and behavior (methods), using concepts like inheritance and encapsulation (e.g., Java, C++)." },
    { term: "Class", definition: "In OOP, a blueprint defining attributes and methods for objects (e.g., a 'Car' class)." },
    { term: "Object", definition: "An instance of a class representing a specific entity (e.g., a specific red Toyota car object)." },
    { term: "Front-end Developer", definition: "Specializes in user interfaces using HTML, CSS, and JavaScript." },
    { term: "Back-end Developer", definition: "Works on servers, databases, and application logic (e.g., using Python, Java)." },
    { term: "Full-stack Developer", definition: "Handles both front-end and back-end development." },
    { term: "QA Engineer", definition: "Ensures software quality through systematic testing and bug detection." },
    { term: "Requirements Analysis", definition: "Gathering and analyzing what the software needs to accomplish." },
    { term: "Implementation", definition: "The actual coding phase where developers write the program." },
    { term: "Unit Testing", definition: "Testing individual components of the software." },
    { term: "Integration Testing", definition: "Testing combined modules to expose interaction faults." },
    { term: "User Acceptance Testing (UAT)", definition: "Final testing by actual users to verify real-world functionality." },
    { term: "Agile Development", definition: "Iterative approach using short cycles (sprints) for flexible development." },
    { term: "Waterfall Model", definition: "Linear approach where each phase must complete before the next begins." },
    { term: "Debugging", definition: "The process of identifying and fixing errors in code." },
    { term: "IDE (Integrated Development Environment)", definition: "Software suite for development (e.g., Visual Studio, Eclipse) combining editor, compiler, and debugger." },
    { term: "API (Application Programming Interface)", definition: "Protocols allowing different software components to communicate." },
    { term: "Compiler", definition: "Program that translates high-level code into machine code." },
    { term: "Interpreter", definition: "Executes code directly without compiling it first." },
    { term: "Algorithm", definition: "A step-by-step procedure for solving problems or performing computations." },
    { term: "Variable", definition: "Named storage location in memory that holds modifiable data." },
    { term: "Function/Method", definition: "A reusable code block performing a specific task." },
    { term: "SQL (Structured Query Language)", definition: "Language for managing relational databases." },
    { term: "GUI (Graphical User Interface)", definition: "Visual interface with graphical elements like buttons and windows." },
    { term: "Framework", definition: "Reusable set of tools/libraries for application development (e.g., React, Django)." },
    { term: "DevOps", definition: "Combines software development (Dev) and IT operations (Ops) to streamline development." },
    { term: "Scrum", definition: "An Agile framework using fixed-length sprints (typically 2-4 weeks)." },
    { term: "Version Control", definition: "System for tracking code changes (e.g., Git) to enable collaboration." }
];
